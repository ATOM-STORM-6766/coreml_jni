name: Build coreml_java

on:
  push:
    branches: ['main']
    tags:
      - 'v*'
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        include:
          - build-type: Release
            publish-type: ''
            extra-cmake-args: ''
            jar-name: 'Release'
            log-level: 2 # INFO
          - build-type: Debug
            publish-type: 'debug'
            extra-cmake-args: ''
            jar-name: 'Debug'
            log-level: 4 # DEBUG
          - build-type: Debug
            publish-type: 'debugwithasan'
            extra-cmake-args: '-DENABLE_ASAN=ON'
            jar-name: 'DebugWithAsan'
            log-level: 4 # DEBUG

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags --force
      - run: git describe --tags

      - name: Install Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Install dependencies
        run: |
          brew install cmake

      - name: Configure and build
        run: |
          cmake -B cmake_build -S . -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DCOMPILE_LOG_LEVEL=${{ matrix.log-level }} -DCMAKE_INSTALL_PREFIX=cmake_build -DOPENCV_ARCH=osxuniversal ${{ matrix.extra-cmake-args }}
          cmake --build cmake_build --target install -- -j 4

      - run: find .

      - run: |
          chmod +x gradlew
          ./gradlew build ${{ (startsWith(github.event_name, 'push') && 'publish') || '' }} -PArchOverride=osxuniversal -PPublishType=${{ matrix.publish-type }} -x check
        env:
          ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}

      - uses: actions/upload-artifact@v4
        name: Upload jar
        with:
          name: libcoreml-jar-${{matrix.jar-name}}
          path: ${{ github.workspace }}/build/libs/*.jar
      - uses: actions/upload-artifact@v4
        with:
          name: libcoreml-${{ matrix.jar-name }}
          path: cmake_build/*.dylib

      # Push to dev release on pushes to master
      - uses: pyTooling/Actions/releaser@r0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: 'Dev'
          rm: true
          files: |
            cmake_build/*.dylib
        if: github.event_name == 'push' && (startsWith(matrix.build-type, 'Release'))

      # Push to actual release, if tagged
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            cmake_build/*.dylib
        if: startsWith(github.ref, 'refs/tags/v') && (startsWith(matrix.build-type, 'Release'))
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
